<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprStick</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>parent = noone;
gotoX = x;
gotoY = y;
chargeTimer = 0;
spd = 5;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(parent))
    instance_destroy();
idealDeltaTime = 1/room_speed*1000000
dtRatio = delta_time/idealDeltaTime
var len = parent.armLength;
var mouseX = mouse_x;
var mouseY = mouse_y;

gotoX = parent.x + lengthdir_x(min(len,point_distance(parent.x,parent.y,mouseX,mouseY)),point_direction(parent.x,parent.y,mouseX,mouseY));
gotoY = parent.y + lengthdir_y(min(len,point_distance(parent.x,parent.y,mouseX,mouseY)),point_direction(parent.x,parent.y,mouseX,mouseY));

if(mouse_check_button(mb_left)){
    chargeTimer++;
    image_index+=dtRatio;
}else if(!mouse_check_button(mb_left)&amp;&amp;chargeTimer!=0){
    spd = 5+chargeTimer/10
    chargeTimer = 0;
    image_index = 0;
}
if(spd&gt;5){
    spd = clamp(spd-0.1,5,20)
}

//x = gotoX
//y = gotoY
if(/*point_distance(x,y,gotoX,gotoY)!=0 &amp;&amp;*/ !mouse_check_button(mb_left)){
    move_towards_point(gotoX,gotoY,min(spd*dtRatio,point_distance(x,y,gotoX,gotoY)));
}else{
    hspeed = 0;
    vspeed = 0;
}



image_angle = point_direction(parent.x,parent.y,x,y)
if(spd&gt;5)
{
    for(var i = 8; i &lt; 24; i++)
    {
        var j = instance_create(x+lengthdir_x(i,image_angle),y+lengthdir_y(i,image_angle),objFadeEffect);
        j.life = (i/24)*30
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var radius = point_distance(x,y,parent.x,parent.y)
for (var j = 0; j &lt; radius; j++)
{
    var p = j / radius;
    draw_sprite_ext(sprOtherArm, 0, round(x * (1 - p) + parent.x * p), floor(y * (1 - p) + parent.y * p),1,1,point_direction(parent.x,parent.y,x,y),c_white,1);
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
