<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMoleEnemy</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
spd = random_range(0.5,1)
spawnTimer = 0;
underground = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(instance_exists(objPlayer) &amp;&amp; !underground)
{
    if(stunTimer &lt;= 0)
        move_towards_point(objPlayer.anchorX,objPlayer.anchorY,spd*dtRatio)
    if(instance_exists(objSword))
    {
        with(objSword)
        {
            if(collision_line(x,y,x+lengthdir_x(24,image_angle),y+lengthdir_y(24,image_angle),other,false,false))
            {
                if(hspeed!=0||vspeed!=0)
                {
                    instance_destroy(other);
                }
                else
                {
                    
                }
            }
        }
    }
}
else
{
    if(stunTimer &lt;= 0)
    {
        spawnTimer++;
        if(spawnTimer == 1)
        {
            x = irandom_range(view_xview[0],view_xview[0]+view_wview[0])
            y = irandom_range(view_yview[0]+view_hview[0]*3/4,view_yview[0]+view_hview[0])
        }
        if(spawnTimer &gt;= 0 &amp;&amp; spawnTimer &lt;=30)
        {
            instance_create(irandom_range(bbox_left,bbox_right),irandom_range(bbox_top,bbox_bottom),objFadeEffect)
        }
        if(spawnTimer == 30)
        {
            underground = false;
            visible = true;
        }
    } else {
        instance_create(irandom_range(bbox_left,bbox_right),irandom_range(bbox_top,bbox_bottom),objFadeEffect)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
